#!/usr/bin/env python3

import colorsys
import os
import sys
from aqt import colors
from aqt.qt import *
from aqt.utils import openLink, tooltip
from aqt.theme import theme_manager
from .ankiaddonconfig import ConfigManager, ConfigWindow, ConfigLayout

def hex_to_hsl(hex_color):

    hex_color = hex_color.lstrip('#')

    r = int(hex_color[0:2], 16) / 255
    g = int(hex_color[2:4], 16) / 255
    b = int(hex_color[4:6], 16) / 255

    h, l, s = colorsys.rgb_to_hls(r, g, b)

    return round(h * 360), round(100 * s) / 100, round(100 * l) / 100

def hls_to_hex(h, l, s):
    h = h / 360

    r, g, b = colorsys.hls_to_rgb(h, l, s)

    return "#{:02x}{:02x}{:02x}".format(int(r * 255), int(g * 255), int(b * 255))

addons_path = "/mnt/c/Users/keene/AppData/Roaming/Anki2/addons21/"

theme, arg = "", ""

if len(sys.argv) == 1:
    theme = input("Enter theme name: ")

    if len(theme.split()) > 1:
        arg = theme.split()[1]
        theme = theme.split()[0]
else:
    theme = sys.argv[1]
    if len(sys.argv) == 3:
        arg = sys.argv[2]

with open(os.path.expanduser("~/base16/schemes/" + theme + ".yaml"), "r") as file:
    lines = file.readlines()

base00 = str(lines[5][11:18])
base01 = str(lines[6][11:18])
base02 = str(lines[7][11:18])
base03 = str(lines[8][11:18])
base04 = str(lines[9][11:18])
base05 = str(lines[10][11:18])
base06 = str(lines[11][11:18])
base07 = str(lines[12][11:18])
base08 = str(lines[13][11:18])
base09 = str(lines[14][11:18])
base0A = str(lines[15][11:18])
base0B = str(lines[16][11:18])
base0C = str(lines[17][11:18])
base0D = str(lines[18][11:18])
base0E = str(lines[19][11:18])
base0F = str(lines[20][11:18])

new_color = base0D


if arg == "-r":
    new_color = base08
elif arg == "-o":
    new_color = base09
elif arg == "-g":
    new_color = base0B
elif arg == "-b":
    new_color = base0D
elif arg == "-p":
    new_color = base0E
elif arg == "-br":
    new_color = base0F

with open(os.path.expanduser("~/base16/theme.json"), "r") as file:
    lines = file.readlines()

replacements = {
    "ACCENT_CARD": base0D,
    "ACCENT_DANGER": base08,
    "ACCENT_NOTE": base0B,
    "\"BORDER\"": base03,
    "BORDER_FOCUS": base07,
    "BORDER_STRONG": base04,
    "BORDER_SUBTLE": base02,
    "BUTTON_BG": base02,
    "BUTTON_DISABLED": base02,
    "\"BUTTON_HOVER\"": base03,
    "BUTTON_HOVER_BORDER": base04,
    "BUTTON_PRIMARY_BG": base0D,
    "BUTTON_PRIMARY_DISABLED": base0D,
    "BUTTON_PRIMARY_GRADIENT_END": base0D,
    "BUTTON_PRIMARY_GRADIENT_START": base0D,
    "\"CANVAS\"": base00,
    "CANVAS_CODE": base01,
    "CANVAS_ELEVATED": base01,
    "CANVAS_GLASS": base01 + "66",
    "CANVAS_OVERLAY": base01,
    "\"FG\"": base07,
    "FG_DISABLED": base06,
    "FG_FAINT": base05,
    "FG_LINK": base07,
    "FG_SUBTLE": base06,
    "FLAG_1": base08,
    "FLAG_2": base09,
    "FLAG_3": base0B,
    "FLAG_4": base0D,
    "FLAG_5": base0E,
    "FLAG_6": base0C,
    "FLAG_7": base07,
    "HIGHLIGHT_BG": base02,
    "HIGHLIGHT_FG": base07,
    "\"SCROLLBAR_BG\"": base00,
    "SCROLLBAR_BG_ACTIVE": base02,
    "SCROLLBAR_BG_HOVER": base00,
    "SELECTED_BG": base02,
    "SELECTED_FG": base07,
    "SHADOW": base00,
    "SHADOW_FOCUS": base09,
    "SHADOW_SUBTLE": base01,
    "STATE_BURIED": base02,
    "STATE_LEARN": base08,
    "STATE_MARKED": base07,
    "STATE_NEW": base0D,
    "STATE_REVIEW": base0B,
    "STATE_SUSPENDED": base06,
}

# Iterate through lines and replace accordingly
for i, line in enumerate(lines):
    for key, value in replacements.items():
        if key in line:
            lines[i + 2] = f'            "{value}",\n'
            lines[i + 3] = f'            "{value}",\n'

with open(addons_path + "688199788/themes/" + theme.replace("-", " ").title() + ".json", "w") as file:
    file.writelines(lines)

# Load theme in ReColor
theme_path = f"{addons_path}688199788/meta.json"
with open(theme_path, "r") as file:
    lines = file.readlines()

for key in replacements:
    idx = lines[0].find(key)
    first_comma = lines[0].find(",", idx)
    lines[0] = lines[0][:first_comma + 3] + replacements[key] + '", "' + replacements[key] + lines[0][first_comma + 7 + len(replacements[key]) * 2:]


with open(theme_path, "w") as file:
    file.writelines(lines)

# Configure button colors
with open(addons_path + "2494384865/config.json", "r") as file:
    lines = file.readlines()

lines[7] = f'    "2 answers": ["{base08}", "{base0B}"],\n'
lines[8] = f'    "3 answers": ["{base08}", "{base0B}", "{base0D}"],\n'
lines[9] = f'    "4 answers": ["{base08}", "{base0A}", "{base0B}", "{base0D}"]\n'

with open(addons_path + "2494384865/config.json", "w") as file:
    file.writelines(lines)


# Configure study time stats
with open(addons_path + "1247171202/meta.json", "r") as file:
    lines = file.readlines()

first_occurence = lines[0].find("titleColor") + 14
lines[0] = lines[0][:first_occurence] + base07 + lines[0][first_occurence + 7:]

second_occurence = lines[0].find("titleColor", first_occurence + 7) + 14
lines[0] = lines[0][:second_occurence] + base07 + lines[0][second_occurence + 7:]

first_occurence = lines[0].find("outputColor") + 15
lines[0] = lines[0][:first_occurence] + new_color + lines[0][first_occurence + 7:]

second_occurence = lines[0].find("outputColor", first_occurence + 7) + 15
lines[0] = lines[0][:second_occurence] + new_color + lines[0][second_occurence + 7:]

with open(addons_path + "1247171202/meta.json", "w") as file:
    file.writelines(lines)


# Configure heatmap
with open(addons_path + "1771074083/web/anki-review-heatmap.js", "r") as file:
    lines = file.readlines()

first_occurence = lines[1].find("q11") + 10

q11 = lines[1][first_occurence:first_occurence + 7]
q11_hsl = hex_to_hsl(q11)

new_color_hsl = hex_to_hsl(new_color)

for i in range(10):
    first_occurence = lines[1].find("q" + str(i + 11)) + 10
    color_i = hls_to_hex(new_color_hsl[0], round(100 * min(1, (0.2 + new_color_hsl[2] - 0.50 * i / 9))) / 100, new_color_hsl[1])
    lines[1] = lines[1][:first_occurence] + color_i + lines[1][first_occurence + 7:]

    second_occurence = lines[1].find("q" + str(i + 11), first_occurence) + 10
    color_i = hls_to_hex(new_color_hsl[0], round(100 * min(1, (0.2 + new_color_hsl[2] - 0.50 * (9 - i) / 9))) / 100, new_color_hsl[1])
    lines[1] = lines[1][:second_occurence] + color_i + lines[1][second_occurence + 7:]

    first_occurence = lines[1].find("col" + str(i + 11)) + 13
    color_i = hls_to_hex(new_color_hsl[0], round(100 * min(1, (0.2 + new_color_hsl[2] - 0.50 * i / 9))) / 100, new_color_hsl[1])
    lines[1] = lines[1][:first_occurence] + color_i + lines[1][first_occurence + 7:]

    second_occurence = lines[1].find("col" + str(i + 11), first_occurence) + 13
    color_i = hls_to_hex(new_color_hsl[0], round(100 * min(1, (0.2 + new_color_hsl[2] - 0.50 * (9 - i) / 9))) / 100, new_color_hsl[1])
    lines[1] = lines[1][:second_occurence] + color_i + lines[1][second_occurence + 7:]

with open(addons_path + "1771074083/web/anki-review-heatmap.js", "w") as file:
    file.writelines(lines)


# Reload theme
conf = ConfigManager()
conf_window.update_widgets()
